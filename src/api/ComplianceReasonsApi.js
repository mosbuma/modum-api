/**
 * Modum MODsense API
 * Allows you to interact with the modum system
 *
 * The version of the OpenAPI document: 4.3.2
 * Contact: support@modum.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ComplianceReason from '../model/ComplianceReason';
import Error from '../model/Error';
import UNKNOWN_BASE_TYPE from '../model/UNKNOWN_BASE_TYPE';

/**
* ComplianceReasons service.
* @module api/ComplianceReasonsApi
* @version 4.3.2
*/
export default class ComplianceReasonsApi {

    /**
    * Constructs a new ComplianceReasonsApi. 
    * @alias module:api/ComplianceReasonsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the complianceReasonsGet operation.
     * @callback module:api/ComplianceReasonsApi~complianceReasonsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ComplianceReason>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of company defined compliance reasons
     * @param {module:api/ComplianceReasonsApi~complianceReasonsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ComplianceReason>}
     */
    complianceReasonsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ComplianceReason];
      return this.apiClient.callApi(
        '/compliance-reasons', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the complianceReasonsIdGet operation.
     * @callback module:api/ComplianceReasonsApi~complianceReasonsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ComplianceReason} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a single compliance reason
     * @param {String} id 
     * @param {module:api/ComplianceReasonsApi~complianceReasonsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComplianceReason}
     */
    complianceReasonsIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling complianceReasonsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ComplianceReason;
      return this.apiClient.callApi(
        '/compliance-reasons/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the complianceReasonsIdPut operation.
     * @callback module:api/ComplianceReasonsApi~complianceReasonsIdPutCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a compliance reason
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/ComplianceReason} opts.complianceReason 
     * @param {module:api/ComplianceReasonsApi~complianceReasonsIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    complianceReasonsIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['complianceReason'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling complianceReasonsIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/compliance-reasons/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the complianceReasonsPost operation.
     * @callback module:api/ComplianceReasonsApi~complianceReasonsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ComplianceReason} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add compliance reason
     * @param {Object} opts Optional parameters
     * @param {module:model/UNKNOWN_BASE_TYPE} opts.UNKNOWN_BASE_TYPE 
     * @param {module:api/ComplianceReasonsApi~complianceReasonsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ComplianceReason}
     */
    complianceReasonsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['UNKNOWN_BASE_TYPE'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ComplianceReason;
      return this.apiClient.callApi(
        '/compliance-reasons', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
