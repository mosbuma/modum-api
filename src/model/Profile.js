/**
 * Modum MODsense API
 * Allows you to interact with the modum system
 *
 * The version of the OpenAPI document: 4.3.2
 * Contact: support@modum.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Profile model module.
 * @module model/Profile
 * @version 4.3.2
 */
class Profile {
    /**
     * Constructs a new <code>Profile</code>.
     * @alias module:model/Profile
     * @param name {String} 
     * @param recordingInterval {Number} 
     * @param expectedShipmentDuration {Number} 
     * @param minimumTemperature {Number} 
     * @param maximumTemperature {Number} 
     */
    constructor(name, recordingInterval, expectedShipmentDuration, minimumTemperature, maximumTemperature) { 
        
        Profile.initialize(this, name, recordingInterval, expectedShipmentDuration, minimumTemperature, maximumTemperature);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, recordingInterval, expectedShipmentDuration, minimumTemperature, maximumTemperature) { 
        obj['name'] = name;
        obj['recording_interval'] = recordingInterval;
        obj['expected_shipment_duration'] = expectedShipmentDuration;
        obj['minimum_temperature'] = minimumTemperature;
        obj['maximum_temperature'] = maximumTemperature;
    }

    /**
     * Constructs a <code>Profile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Profile} obj Optional instance to populate.
     * @return {module:model/Profile} The populated <code>Profile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Profile();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'Date');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('company_id')) {
                obj['company_id'] = ApiClient.convertToType(data['company_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('recording_interval')) {
                obj['recording_interval'] = ApiClient.convertToType(data['recording_interval'], 'Number');
            }
            if (data.hasOwnProperty('recording_delay')) {
                obj['recording_delay'] = ApiClient.convertToType(data['recording_delay'], 'Number');
            }
            if (data.hasOwnProperty('expected_shipment_duration')) {
                obj['expected_shipment_duration'] = ApiClient.convertToType(data['expected_shipment_duration'], 'Number');
            }
            if (data.hasOwnProperty('minimum_temperature')) {
                obj['minimum_temperature'] = ApiClient.convertToType(data['minimum_temperature'], 'Number');
            }
            if (data.hasOwnProperty('maximum_temperature')) {
                obj['maximum_temperature'] = ApiClient.convertToType(data['maximum_temperature'], 'Number');
            }
            if (data.hasOwnProperty('absolute_minimum_temperature')) {
                obj['absolute_minimum_temperature'] = ApiClient.convertToType(data['absolute_minimum_temperature'], 'Number');
            }
            if (data.hasOwnProperty('absolute_maximum_temperature')) {
                obj['absolute_maximum_temperature'] = ApiClient.convertToType(data['absolute_maximum_temperature'], 'Number');
            }
            if (data.hasOwnProperty('deviation_permissible_duration')) {
                obj['deviation_permissible_duration'] = ApiClient.convertToType(data['deviation_permissible_duration'], 'Number');
            }
            if (data.hasOwnProperty('deviation_reset_time')) {
                obj['deviation_reset_time'] = ApiClient.convertToType(data['deviation_reset_time'], 'Number');
            }
            if (data.hasOwnProperty('average_last_n_temperatures')) {
                obj['average_last_n_temperatures'] = ApiClient.convertToType(data['average_last_n_temperatures'], 'Number');
            }
            if (data.hasOwnProperty('show_alert_on_logger')) {
                obj['show_alert_on_logger'] = ApiClient.convertToType(data['show_alert_on_logger'], 'Boolean');
            }
            if (data.hasOwnProperty('show_alert_on_mobile')) {
                obj['show_alert_on_mobile'] = ApiClient.convertToType(data['show_alert_on_mobile'], 'Boolean');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Profile.prototype['id'] = undefined;

/**
 * @member {Date} created_at
 */
Profile.prototype['created_at'] = undefined;

/**
 * @member {Date} updated_at
 */
Profile.prototype['updated_at'] = undefined;

/**
 * @member {Date} deleted_at
 */
Profile.prototype['deleted_at'] = undefined;

/**
 * @member {String} created_by
 */
Profile.prototype['created_by'] = undefined;

/**
 * @member {String} company_id
 */
Profile.prototype['company_id'] = undefined;

/**
 * @member {String} name
 */
Profile.prototype['name'] = undefined;

/**
 * @member {Number} recording_interval
 */
Profile.prototype['recording_interval'] = undefined;

/**
 * @member {Number} recording_delay
 * @default 0
 */
Profile.prototype['recording_delay'] = 0;

/**
 * @member {Number} expected_shipment_duration
 */
Profile.prototype['expected_shipment_duration'] = undefined;

/**
 * @member {Number} minimum_temperature
 */
Profile.prototype['minimum_temperature'] = undefined;

/**
 * @member {Number} maximum_temperature
 */
Profile.prototype['maximum_temperature'] = undefined;

/**
 * @member {Number} absolute_minimum_temperature
 */
Profile.prototype['absolute_minimum_temperature'] = undefined;

/**
 * @member {Number} absolute_maximum_temperature
 */
Profile.prototype['absolute_maximum_temperature'] = undefined;

/**
 * @member {Number} deviation_permissible_duration
 * @default 0
 */
Profile.prototype['deviation_permissible_duration'] = 0;

/**
 * @member {Number} deviation_reset_time
 * @default 0
 */
Profile.prototype['deviation_reset_time'] = 0;

/**
 * @member {Number} average_last_n_temperatures
 * @default 0
 */
Profile.prototype['average_last_n_temperatures'] = 0;

/**
 * @member {Boolean} show_alert_on_logger
 * @default true
 */
Profile.prototype['show_alert_on_logger'] = true;

/**
 * @member {Boolean} show_alert_on_mobile
 * @default true
 */
Profile.prototype['show_alert_on_mobile'] = true;

/**
 * @member {Number} version
 */
Profile.prototype['version'] = undefined;

/**
 * @member {String} group_id
 */
Profile.prototype['group_id'] = undefined;






export default Profile;

