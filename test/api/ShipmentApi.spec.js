/**
 * Modum MODsense API
 * Allows you to interact with the modum system
 *
 * The version of the OpenAPI document: 4.3.2
 * Contact: support@modum.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ModumMoDsenseApi);
  }
}(this, function(expect, ModumMoDsenseApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ModumMoDsenseApi.ShipmentApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ShipmentApi', function() {
    describe('acknowledgeError', function() {
      it('should call acknowledgeError successfully', function(done) {
        //uncomment below and update the code to test acknowledgeError
        //instance.acknowledgeError(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('acknowledgeMissing', function() {
      it('should call acknowledgeMissing successfully', function(done) {
        //uncomment below and update the code to test acknowledgeMissing
        //instance.acknowledgeMissing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addComment', function() {
      it('should call addComment successfully', function(done) {
        //uncomment below and update the code to test addComment
        //instance.addComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addFields', function() {
      it('should call addFields successfully', function(done) {
        //uncomment below and update the code to test addFields
        //instance.addFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProfile', function() {
      it('should call createProfile successfully', function(done) {
        //uncomment below and update the code to test createProfile
        //instance.createProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProfile', function() {
      it('should call deleteProfile successfully', function(done) {
        //uncomment below and update the code to test deleteProfile
        //instance.deleteProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generateCSV', function() {
      it('should call generateCSV successfully', function(done) {
        //uncomment below and update the code to test generateCSV
        //instance.generateCSV(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generatePDF', function() {
      it('should call generatePDF successfully', function(done) {
        //uncomment below and update the code to test generatePDF
        //instance.generatePDF(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generateXLSX', function() {
      it('should call generateXLSX successfully', function(done) {
        //uncomment below and update the code to test generateXLSX
        //instance.generateXLSX(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlarms', function() {
      it('should call getAlarms successfully', function(done) {
        //uncomment below and update the code to test getAlarms
        //instance.getAlarms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEvents', function() {
      it('should call getEvents successfully', function(done) {
        //uncomment below and update the code to test getEvents
        //instance.getEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGatewaySessions', function() {
      it('should call getGatewaySessions successfully', function(done) {
        //uncomment below and update the code to test getGatewaySessions
        //instance.getGatewaySessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLoggerDataByNonce', function() {
      it('should call getLoggerDataByNonce successfully', function(done) {
        //uncomment below and update the code to test getLoggerDataByNonce
        //instance.getLoggerDataByNonce(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProfiles', function() {
      it('should call getProfiles successfully', function(done) {
        //uncomment below and update the code to test getProfiles
        //instance.getProfiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getShipmentByID', function() {
      it('should call getShipmentByID successfully', function(done) {
        //uncomment below and update the code to test getShipmentByID
        //instance.getShipmentByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getShipmentStatus', function() {
      it('should call getShipmentStatus successfully', function(done) {
        //uncomment below and update the code to test getShipmentStatus
        //instance.getShipmentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getShipments', function() {
      it('should call getShipments successfully', function(done) {
        //uncomment below and update the code to test getShipments
        //instance.getShipments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getShipmentsOverview', function() {
      it('should call getShipmentsOverview successfully', function(done) {
        //uncomment below and update the code to test getShipmentsOverview
        //instance.getShipmentsOverview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putShipments', function() {
      it('should call putShipments successfully', function(done) {
        //uncomment below and update the code to test putShipments
        //instance.putShipments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setCompliant', function() {
      it('should call setCompliant successfully', function(done) {
        //uncomment below and update the code to test setCompliant
        //instance.setCompliant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setNonCompliant', function() {
      it('should call setNonCompliant successfully', function(done) {
        //uncomment below and update the code to test setNonCompliant
        //instance.setNonCompliant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('startShipment', function() {
      it('should call startShipment successfully', function(done) {
        //uncomment below and update the code to test startShipment
        //instance.startShipment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProfile', function() {
      it('should call updateProfile successfully', function(done) {
        //uncomment below and update the code to test updateProfile
        //instance.updateProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
